# Default values for stable-app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 2

deploy:
  strategy: 
    # rollingUpdate, blueGreen, canary
    type: blueGreen
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    blueGreen:
      autoPromotionEnabled: false  # Auto Promotion Enable
      autoPromotionSeconds: 10     # Auto Promotion Time (s)
    canary:
      maxSurge: "25%"    # canary 배포로 생성할 pod의 비율
      maxUnavailable: 0  # 업데이트 될 때 사용할 수 없는 pod의 최대 수
      steps:
      - setWeight: 25    # 카나리로 배포된 서버로 전송해야될 트래픽 비율
      - pause: {}        # AutoPromotion Time (s, m, h)

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets:
  - name: harbor-cred
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podAdditionLabels:
  cached: nosetvalue  # Cached Label

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

hostAliases: []
#  - ip: "192.168.1.10"
#    hostnames:
#    - "sample.com"
#    - "www.sample.com"

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# 컨테이너가 살아있는지 체크
# app 에서는 해당 url이 호출 됐을 때 http response 200 을 리턴한다.
livenessProbe:
  enabled: true
  path: /
  # 컨테이너 생성 후 몇 초 뒤에 체크할지 설정
  initialDelaySeconds: 5
  timeoutSeconds: 3
  periodSeconds: 10
  failureThreshold: 5

# 컨테이너가 서비스 가능한 상태인지 체크
# app 에서는 해당 url이 호출 됐을 때 http response 200 을 리턴한다.
readinessProbe:
  enabled: true
  path: /
  # 컨테이너 생성 후 몇 초 뒤에 체크할지 설정
  initialDelaySeconds: 5
  timeoutSeconds: 3
  periodSeconds: 10
  failureThreshold: 5

lifecycle:
  preStop:
    exec:
      command:
      - sh
      - -c
      - sleep 20 

persistence:
  enabled: false
  storageClass: netapp
  storage: 5Gi
  mountPath: "/data"

configMap:
  enabled: false
  data:

secret:
  enabled: false
  data: 
